{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","Card.jsx","NetflixContent.jsx","PokeCard.jsx","Route2.jsx","Route1.jsx","ClientServer.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","className","style","display","textAlign","backgroundColor","margin","boxShadow","src","imgsrc","width","height","fontFamily","fontSize","marginTop","name","ns","imglink","process","map","cvalue","PokeCard","Router2","fname","Route1","Fname","createContext","ClientServer","exact","activeClassName","to","Provider","value","path","component","Route2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,I,YCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCmCCQ,MAxCf,SAAeC,GAwBX,OACI,mCAEA,sBAAKC,UAAU,YAAYC,MAxB/B,CACIC,QAAQ,eACRC,UAAU,SACVC,gBAAgB,QAChBC,OAAO,QACPC,UAAU,qBAmBV,UAEE,qBAAKC,IAAKR,EAAMS,OAAQP,MAlB9B,CAEIC,QAAQ,eACRO,MAAM,QACNC,OAAO,QACPL,OAAO,UAcL,8BACI,oBAAIJ,MAZd,CACIU,WAAW,0BACXC,SAAS,SACTC,UAAU,OASJ,SAAkBd,EAAMe,SAE5B,qDClBNC,EACJ,CACG,CACIC,QAAQC,0CACRH,KAAK,iBAET,CACIE,QAAQC,wCACRH,KAAK,cAET,CACCE,QAAQC,4CACRH,KAAK,oBAEN,CACIE,QAAQC,oCACRH,KAAK,UAET,CACIE,QAAQC,yCACRH,KAAK,iBAIGC,EAAGG,KAAI,SAACC,GACtB,OACG,cAAC,EAAD,CACHX,OAAM,UAAKW,EAAOH,SAClBF,KAAI,UAAKK,EAAOL,W,kECdFM,I,OClBAC,MATf,WAEI,OAAO,qCACT,cAAC,EAAD,CAAQC,MAAM,WACZ,wCACC,iDAHM,QCEIC,MAJf,SAAiBxB,GAEb,OAAQ,mCAAE,6CAAgBA,EAAMuB,YCD9BE,EAAQC,0BAoBCC,MAnBf,WAEI,OACI,qCACD,sBAAK1B,UAAU,aAAf,UACC,cAAC,IAAD,CAAS2B,OAAK,EAACC,gBAAgB,eAAeC,GAAG,IAAjD,sBACD,cAAC,IAAD,CAASF,OAAK,EAACC,gBAAgB,eAAeC,GAAG,UAAjD,yBAEA,cAACL,EAAMM,SAAP,CAAgBC,MAAM,WACrB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOJ,OAAK,EAACK,KAAK,IAAIC,UAAWV,IACjC,cAAC,IAAD,CAAOI,OAAK,EAACK,KAAK,UAAUC,UAAWC,WCGnDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,mCAaD,cAAC,IAAD,UACE,cAAC,EAAD,UAKDC,SAASC,eAAe,SAM1BlD,M","file":"static/js/main.329d5a6b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport './index.css';\r\nfunction Card (props)\r\n{\r\n    var Cardcss=\r\n    {\r\n        display:\"inline-block\",\r\n        textAlign:\"center\",\r\n        backgroundColor:\"white\",\r\n        margin:\"2rem \",\r\n        boxShadow:\"10px 10px #888888\",\r\n    }\r\n    var imgCss =\r\n    {\r\n        \r\n        display:\"inline-block\",\r\n        width:\"375px\",\r\n        height:\"475px\",\r\n        margin:\"30px\",\r\n    }\r\n    var Name =\r\n    {\r\n        fontFamily:\"'Orelega One', cursive;\",\r\n        fontSize:\"2.5rem\",\r\n        marginTop:\"0px\",\r\n    }\r\n    return(\r\n        <>\r\n       \r\n        <div className=\"CardHover\" style={Cardcss}>\r\n        \r\n          <img src={props.imgsrc} style={imgCss}/> \r\n          <div>\r\n              <h2 style={Name}>{props.name}</h2>\r\n          </div> \r\n          <button>Watch Now</button>\r\n        </div>\r\n        \r\n        </>\r\n       \r\n    )\r\n}\r\nexport default Card;","import React from 'react';\r\nimport reactDom from 'react-dom';\r\nimport Card from './Card';\r\nimport './index.css';\r\n\r\n\r\nvar bodyCss = {\r\n    backgroundColor:\"#d7d7d7\",\r\n}\r\nvar heading =\r\n{\r\n color:\"#afafaf\",\r\n\r\n fontSize:\"2.5rem\",\r\n textAlign:\"center\",\r\n}\r\n\r\nvar ns = \r\n[\r\n   {\r\n       imglink:process.env.PUBLIC_URL + '/Images/OnePunchMan.jfif',\r\n       name:\"One Punch Man\"\r\n   } ,\r\n   {\r\n       imglink:process.env.PUBLIC_URL + '/Images/Death-Note.jpg',\r\n       name:\"Death Note\"\r\n   },\r\n   {\r\n    imglink:process.env.PUBLIC_URL + '/Images/MyHeroAcademia.png',\r\n    name:\"My Hero Academia\"\r\n   },\r\n   {\r\n       imglink:process.env.PUBLIC_URL + '/Images/Naruto.jpg',\r\n       name:\"Naruto\"\r\n   },\r\n   {\r\n       imglink:process.env.PUBLIC_URL + '/Images/DemonSlayer.jpg',\r\n       name:\"Demon Slayer\"\r\n   }\r\n\r\n]\r\nconst newarr = ns.map((cvalue)=>\r\n{return(\r\n    <Card\r\n imgsrc={`${cvalue.imglink}`}\r\n name={`${cvalue.name}`} />\r\n\r\n)\r\n    \r\n})\r\nconst favSeries=\"netflix\"\r\nconst FavS =() =>\r\n{\r\nif(favSeries === \"netflix\")\r\n{\r\n   console.log(document.getElementById(\"filterbtn\")); \r\nreturn(\r\n    <Card \r\n    imgsrc={ns[0].imglink}\r\n    name={ns[0].name} />\r\n    \r\n)\r\n}else {\r\n    \r\n}\r\n}\r\n\r\n\r\n\r\nfunction NetflixContent ()\r\n{\r\n    return (\r\n        <center>\r\n        <div style = {bodyCss}>\r\n        <div className=\"header\">\r\n        <h1 style ={heading}>Netflix Anime</h1>\r\n        </div>\r\n        <form action=\"./index.js\">\r\n            <label for=\"animes\" style={{fontSize:\"30px\"}}>Filter: </label>\r\n           \r\n            <select id=\"animes\" name=\"animes\" style={{height:\"30px\",width:\"330px\",fontSize:\"20px\",marginLeft:\"10px\"}}>\r\n                <option value=\"Watched\">Watched</option>\r\n                <option value=\"Watching\">Watching</option>\r\n            </select>\r\n            <input id=\"filterbtn\"type=\"submit\" value=\"Go\" style={{height:\"30px\",width:\"75px\",fontSize:\"20px\",marginLeft:\"10px\"}}></input>\r\n        </form>\r\n        <FavS/>\r\n        {newarr}\r\n        </div>\r\n        <h3 style={{color:\"green\"}}>Task4</h3>\r\n        </center>\r\n        \r\n      )\r\n}\r\n\r\n\r\nexport default NetflixContent;","import React,{useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nfunction PokeCard ()\r\n{\r\n    const [num,Setnum] =useState();\r\n    useEffect(async function getData()\r\n    {\r\nconst res=await axios.get(`https://pokeapi.co/api/v2/pokemon/${num}`);\r\nSetname(res.data.name)  ;\r\nSetmove(res.data.moves.length) \r\n})\r\n    const [name,Setname]=useState();\r\n    const [move,Setmove]=useState();\r\n   \r\n    return(\r\n        <>\r\n        <h1>You have choosed card no. {num}</h1>\r\n        <h1>I am {name} </h1>\r\n        <h1>I have {move} moves</h1>\r\n        <select  onChange={(event)=>\r\n        {\r\n            Setnum(event.target.value)\r\n        }}>\r\n            <option value=\"1\">1</option>\r\n            <option value=\"2\">2</option>\r\n            <option value=\"25\">25</option>\r\n            <option value=\"3\">3</option>\r\n            <option value=\"4\">4</option>\r\n        </select>\r\n        </>)\r\n}\r\nexport default PokeCard;","import React,{useState,useContext,useEffect} from \"react\";\r\nimport \"./index.css\";\r\nimport {Route,Switch} from 'react-router-dom';\r\nimport Route1 from \"./Route1\"; \r\nfunction Router2 ()\r\n{\r\n    return(<>\r\n  <Route1 fname=\"Shivam\" />\r\n    <h1>Hello </h1>\r\n     <h1>This is Route 2</h1>;\r\n    </>)\r\n     \r\n} \r\nexport default Router2;","import React,{useState,useContext,useEffect} from \"react\";\r\nimport Route2 from \"./Route2\";\r\nimport \"./index.css\";\r\nimport {Route,Switch} from 'react-router-dom';\r\nfunction Route1 (props)\r\n{\r\n    return (<><h1>My name is {props.fname}</h1></>);\r\n} \r\nexport default Route1;","import React,{useState,createContext,useEffect} from \"react\";\r\nimport {Route,Switch,NavLink} from 'react-router-dom';\r\nimport Route1 from \"./Route1\";\r\nimport Route2 from \"./Route2\";\r\nimport \"./index.css\";\r\nconst Fname = createContext();\r\nfunction ClientServer ()\r\n{\r\n    return(\r\n        <>\r\n       <div className=\"menu_style\">\r\n        <NavLink exact activeClassName=\"active_class\" to=\"/\"> Route1 </NavLink> \r\n       <NavLink exact activeClassName=\"active_class\" to=\"/route2\"> Route2 </NavLink>\r\n       </div>\r\n       <Fname.Provider value=\"Shivam\"></Fname.Provider> \r\n        <Switch>\r\n            <Route exact path='/' component={Route1} />\r\n            <Route exact path='/route2' component={Route2} />\r\n            \r\n        </Switch>\r\n        \r\n        </>\r\n    )\r\n    \r\n} \r\nexport default ClientServer;\r\nexport {Fname};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter,Rooute,Switch } from \"react-router-dom\";\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Content from './Content.jsx';\nimport NetflixContent from './NetflixContent.jsx';\nimport Slot from './Slot.jsx';\nimport Time from \"./Time.jsx\";\nimport Clicking from \"./EventWithHook.jsx\";\nimport Form from \"./Form.jsx\";\nimport Card from './Card.jsx';\nimport Todolist from \"./Todolist\";\nimport Clickbtn from \"./Clickbtn.jsx\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Googlekeep from \"./Googlekeep.jsx\";\nimport PokeCard from './PokeCard.jsx';\nimport ClientServer from './ClientServer';\nReactDOM.render(\n  <React.StrictMode>\n  <>\n  {/* <Time/>\n  <Content />\n   <NetflixContent /> \n <Slot /> \n <Clicking />\n \n <Form />\n \n <Todolist /> \n <Clickbtn/>\n <Googlekeep />\n <PokeCard /> */}\n <BrowserRouter>\n   <ClientServer />\n </BrowserRouter>\n \n  </>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}